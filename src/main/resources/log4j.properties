# An example log4j configuration file that outputs to System.out.  The
# output information consists of relative time, log level, thread
# name, logger name, nested diagnostic context and the message in that
# order.

# For the general syntax of property based configuration files see the
# documenation of org.apache.log4j.PropertyConfigurator.
# levels DEBUG < INFO < WARN < ERROR < FATAL

# \u5B9A\u4E49\u6839\u65E5\u5FD7,\u65E5\u5FD7\u7EA7\u522B\u4E3ADEBUG \u8F93\u51FA\u76EE\u6807\u4E3A\u63A7\u5236\u53F0\uFF0C\u6587\u4EF6
log4j.rootLogger=INFO,A1,A2
## \u5305com.haha\u65E5\u5FD7,\u65E5\u5FD7\u7EA7\u522B\u4E3ADEBUG \u8F93\u51FA\u76EE\u6807\u4E3A\u63A7\u5236\u53F0\uFF0C\u6587\u4EF6(\u6CE8\u610F\uFF0C\u5305com.haha\u4E0B\u7684\u6240\u6709\u7C7B\u5C06\u81EA\u52A8\u62E5\u6709\u6B64\u65E5\u5FD7\u5C5E\u6027)
#log4j.logger.com.haha=DEBUG,A1,R

# \u914D\u7F6ETRUE
#log4j.additivity.org.apache=true


log4j.appender.A2=org.apache.log4j.DailyRollingFileAppender
log4j.appender.A2.Threshold=info
log4j.appender.A2.Append=true
log4j.appender.A2.File=${catalina.home}/logs/MyApp
log4j.appender.A2.DatePattern='_'yyyy-MM-dd'.log'
log4j.appender.A2.layout=org.apache.log4j.PatternLayout
log4j.appender.A2.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %-20C.%-20M <%t> - %m%n

# A1 is set to be a ConsoleAppender which outputs to System.out.
log4j.appender.A1=org.apache.log4j.ConsoleAppender

# A1 uses PatternLayout.
log4j.appender.A1.layout=org.apache.log4j.PatternLayout

# The conversion pattern uses format specifiers. You might want to
# change the pattern an watch the output format change.
#log4j.appender.A1.layout.ConversionPattern=%-4r %-5p [%t] %37c %3x - %m%n
#log4j.appender.A1.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %-20C{1}.%-20M - %m%n
log4j.appender.A1.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %-20C.%-20M <%t> - %m%n

## log to DB .
## \u540D\u79F0\u4E3AbehaviorLog\u65E5\u5FD7\uFF0C\u65E5\u5FD7\u7EA7\u522B\u4E3AINFO,\u8F93\u51FA\u76EE\u6807\u4E3A\u6570\u636E\u5E93(\u6CE8\u610F\uFF0C\u6240\u6709\u4F7F\u7528IAMLogInfo\u4F5C\u4E3A\u540D\u79F0\u7684\u65E5\u5FD7\u5C06\u62E5\u7528\u4E9B\u65E5\u5FD7\u5C5E\u6027)
#log4j.logger.behaviorLog=INFO,DB
## \u7C7Bcom.cf.soa.service.log.BehaviorLogService\u65E5\u5FD7,\u7EA7\u522B\u4E3ADEBUG\uFF0C\u8F93\u51FA\u76EE\u6807\u4E3A\u6587\u4EF6
##log4j.logger.com.cf.soa.service.log.BehaviorLogService=INFO,DB
##log4j.logger.com.cf.soa.service.log=DB
#log4j.appender.DB.connector=com.cf.soa.util.DbcpPoolConnectionHandler
#log4j.appender.DB.Threshold=INFO
##log4j.appender.DB=com.cf.soa.util.JDBCExtAppender
#log4j.appender.DB.layout=org.apache.log4j.PatternLayout
#log4j.appender.DB.BufferSize=5
##log4j.appender.DB.driver=
##log4j.appender.DB.URL=
##log4j.appender.DB.user=
##log4j.appender.DB.password=
#log4j.appender.DB.sql=INSERT INTO common$behaviour_logs (user_type, user_id, corp_id, behaviour_type, behaviour_content, content_id, relate_id, indus_id, category_1_id, category_id, client_ip, create_time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
#log4j.additivity.behaviorLog=true



#
#log4j.logger.behaviorLog=INFO,DATABASE
#
#log4j.appender.DATABASE=org.apache.log4j.jdbcplus.JDBCAppender
#log4j.appender.DATABASE.connector=com.cf.soa.util.DbcpPoolConnectionHandler
#log4j.appender.DATABASE.sql=INSERT INTO common$behaviour_logs (user_type, user_id, corp_id, behaviour_type, behaviour_content, content_id, relate_id, indus_id, category_1_id, category_id, client_ip, create_time) VALUES ('@MDC:user_type@', '@MDC:user_id@', '@MDC:corp_id@', '@MDC:behaviour_type@', '@MDC:behaviour_content@', '@MDC:content_id@', '@MDC:relate_id@', '@MDC:indus_id@', '@MDC:category_1_id@', '@MDC:category_id@', '@MDC:client_ip@', '@MDC:create_time@')
#log4j.appender.DATABASE.buffer=5
#log4j.appender.DATABASE.commit=true
#log4j.appender.DATABASE.layout=org.apache.log4j.PatternLayout
#log4j.appender.DATABASE.layout.ConversionPattern=%m





# for package com.te, set level to DEBUG
log4j.logger.com.gangw.myapp=info

# Changing the log level to DEBUG when debug
log4j.logger.org.springframework=info
# Changing the log level to DEBUG will display SQL Hibernate generated
#log4j.logger.org.hibernate=WARN
#log4j.logger.org.hibernate.SQL=ERROR
